#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.JobKits.Dashboard
{
    using System;
    
    #line 9 "..\..\Dashboard\MonitorPage.cshtml"
    using System.Collections.Concurrent;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    
    #line 2 "..\..\Dashboard\MonitorPage.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 3 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.Dashboard.Pages;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Dashboard.Controls;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Resources;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Worker;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.Storage;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class MonitorPage : Hangfire.Dashboard.RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");










WriteLiteral("\r\n");


            
            #line 12 "..\..\Dashboard\MonitorPage.cshtml"
  
    string selectedCategory = this.SelectedCategory;
    MonitorMap jobMap = this.Map;
    JobKitOptions options = this.Options;
    Layout = new LayoutPage("job-Monitor");
    var availableJobs = jobMap.JobCollection.Where(x => x.Value.CategoryName == selectedCategory).Select(x => x.Value).ToArray();
    MonitorJob[] jobCollections;
    if (availableJobs.Count() == 0)
    {
        jobCollections = jobMap.JobCollection.Select(x => x.Value).ToArray();
    }
    else
    {
        jobCollections = availableJobs;
    }
    var dataList = new ConcurrentBag<JobDto>();

    using (var connection = Storage.GetConnection())
    {
        var storageConnection = connection as JobStorageConnection;
        if (storageConnection != null)
        {
            //Parallel.ForEach(jobCollections, o =>
            //{
            //    var job = storageConnection.GetAllEntriesFromHash($"recurring-Monitor:{o.RecurringJobId}");
            //    dataList.Add(new JobDto
            //    {
            //        RecurringJobId = o.RecurringJobId,
            //        JobName = o.Name,
            //        ExecutionStatus = job["LastExecutionStatus"],
            //        ExecutionTime = job["LastExecutionTime"],
            //        ValidationStatus = job["ValidationStatus"],
            //        ValidationTime = job["ValidationDateTime"]
            //    });
            //});
            foreach (var item in jobCollections)
            {
                var job = storageConnection.GetAllEntriesFromHash($"recurring-Monitor:{item.RecurringJobId}");
                dataList.Add(new JobDto
                {
                    Id=job["LastExecutionJobId"]==""?"尚未執行與驗證":"#"+job["LastExecutionJobId"],
                    RecurringJobId = item.RecurringJobId,
                    JobName = item.Name,
                    ExecutionStatus = job["LastExecutionStatus"]=="False"?"執行失敗":"執行成功",
                    ExecutionTime = job["LastExecutionTime"] ?? "尚未執行",
                    ValidationStatus = job["ValidationStatus"] == "False" ? "驗證失敗" : "驗證成功",
                    ValidationTime = job["ValidationDateTime"] ?? "尚未驗證",
                    HrefString= job["LastExecutionJobId"] == ""?"": $"/jobs/details/{job["LastExecutionJobId"]}",
                });
            }
        }
    }


            
            #line default
            #line hidden
WriteLiteral("\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"");


            
            #line 66 "..\..\Dashboard\MonitorPage.cshtml"
                                        Write(Url.To(JobKitRoute.Monitor.CssUrl));

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n<script type=\"text/javascript\">\r\n    var launchUrl = \'");


            
            #line 68 "..\..\Dashboard\MonitorPage.cshtml"
                Write(Url.To(JobKitRoute.Monitor.LaunchUrl));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n    var recurringUrl = \'");


            
            #line 69 "..\..\Dashboard\MonitorPage.cshtml"
                   Write(Url.To(JobKitRoute.Monitor.LaunchRecurringUrl));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n    var idFieldName = \'");


            
            #line 70 "..\..\Dashboard\MonitorPage.cshtml"
                  Write(StandbyKey.IdField);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n    var jobLinkBaseUrl = \'");


            
            #line 71 "..\..\Dashboard\MonitorPage.cshtml"
                     Write(Url.JobDetails(""));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n    var requireConfirmation = ");


            
            #line 72 "..\..\Dashboard\MonitorPage.cshtml"
                         Write(options.RequireConfirmation.ToString().ToLowerInvariant());

            
            #line default
            #line hidden
WriteLiteral(";\r\n    var messageLaunch = {\r\n        confirm: \'");


            
            #line 74 "..\..\Dashboard\MonitorPage.cshtml"
             Write(Strings.Standby_Launch);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n        confirmRecurring: \'");


            
            #line 75 "..\..\Dashboard\MonitorPage.cshtml"
                      Write(Strings.Standby_LaunchRecurring);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n        success: \'");


            
            #line 76 "..\..\Dashboard\MonitorPage.cshtml"
             Write(Strings.Standby_Success);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n        successRecurring: \'");


            
            #line 77 "..\..\Dashboard\MonitorPage.cshtml"
                      Write(Strings.Standby_SuccessRecurring);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n        failure: \'");


            
            #line 78 "..\..\Dashboard\MonitorPage.cshtml"
             Write(Strings.Standby_Failure);

            
            #line default
            #line hidden
WriteLiteral("\'\r\n    };\r\n</script>\r\n<script type=\"text/javascript\" src=\"");


            
            #line 81 "..\..\Dashboard\MonitorPage.cshtml"
                               Write(Url.To(JobKitRoute.Standby.JsUrl));

            
            #line default
            #line hidden
WriteLiteral("\"></script>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n        ");


            
            #line 85 "..\..\Dashboard\MonitorPage.cshtml"
   Write(SidebarControlFromMonitor.Render(Html, selectedCategory, jobMap));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n    <h1 class=\"page-header\">");


            
            #line 87 "..\..\Dashboard\MonitorPage.cshtml"
                       Write(selectedCategory);

            
            #line default
            #line hidden
WriteLiteral(@"</h1>
    <div class=""col-md-9"">
        <table class=""table"">
            <thead>
                <tr>
                    <th>排程編號</th>
                    <th>排程名稱</th>
                    <th> 執行時間 </th>
                    <th> 執行狀態</th>
                    <th> 驗證時間 </th>
                    <th> 驗證狀況</th>
                    <th> 執行明細</th>
                </tr>
            </thead>
            <tbody>
");


            
            #line 102 "..\..\Dashboard\MonitorPage.cshtml"
                 foreach (var job in dataList.OrderByDescending(o => o.ExecutionTime))
                {

            
            #line default
            #line hidden
WriteLiteral("                <tr class=\"js-jobs-list-row hover\">\r\n                    <td clas" +
"s=\"word-break width-15\">");


            
            #line 105 "..\..\Dashboard\MonitorPage.cshtml"
                                               Write(job.RecurringJobId);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    <td class=\"word-break width-15\">");


            
            #line 106 "..\..\Dashboard\MonitorPage.cshtml"
                                               Write(job.JobName);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    <td class=\"align-right min-width\">");


            
            #line 107 "..\..\Dashboard\MonitorPage.cshtml"
                                                 Write(job.ExecutionTime);

            
            #line default
            #line hidden
WriteLiteral(" </td>\r\n                    <td class=\"align-right min-width\">");


            
            #line 108 "..\..\Dashboard\MonitorPage.cshtml"
                                                 Write(job.ExecutionStatus);

            
            #line default
            #line hidden
WriteLiteral("  </td>\r\n                    <td class=\"align-right min-width\">");


            
            #line 109 "..\..\Dashboard\MonitorPage.cshtml"
                                                 Write(job.ValidationTime);

            
            #line default
            #line hidden
WriteLiteral("  </td>\r\n                    <td class=\"align-right min-width\">");


            
            #line 110 "..\..\Dashboard\MonitorPage.cshtml"
                                                 Write(job.ValidationStatus);

            
            #line default
            #line hidden
WriteLiteral("  </td>\r\n                    <td class=\"min-width\">\r\n");


            
            #line 112 "..\..\Dashboard\MonitorPage.cshtml"
                         if (string.IsNullOrEmpty(job.HrefString))
                        {
                            
            
            #line default
            #line hidden
            
            #line 114 "..\..\Dashboard\MonitorPage.cshtml"
                       Write(job.Id);

            
            #line default
            #line hidden
            
            #line 114 "..\..\Dashboard\MonitorPage.cshtml"
                                   
                        }
                        else
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <a href=");


            
            #line 118 "..\..\Dashboard\MonitorPage.cshtml"
                               Write(job.HrefString);

            
            #line default
            #line hidden
WriteLiteral(">");


            
            #line 118 "..\..\Dashboard\MonitorPage.cshtml"
                                               Write(job.Id);

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n");


            
            #line 119 "..\..\Dashboard\MonitorPage.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </td>\r\n                </tr>\r\n");


            
            #line 122 "..\..\Dashboard\MonitorPage.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n");


        }
    }
}
#pragma warning restore 1591

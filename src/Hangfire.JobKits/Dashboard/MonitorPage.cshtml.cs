#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.JobKits.Dashboard
{
    using System;
    
    #line 9 "..\..\Dashboard\MonitorPage.cshtml"
    using System.Collections.Concurrent;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    
    #line 2 "..\..\Dashboard\MonitorPage.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 3 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.Dashboard.Pages;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Dashboard.Controls;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Resources;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Worker;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.Storage;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class MonitorPage : Hangfire.Dashboard.RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");










WriteLiteral("\r\n");


            
            #line 12 "..\..\Dashboard\MonitorPage.cshtml"
  
    Layout = new LayoutPage(Strings.Monitor_Title);

    string selectedCategory = this.SelectedCategory;
    MonitorMap jobMap = this.Map;
    JobKitOptions options = this.Options;

    var availableJobs = jobMap.JobCollection.ContainsKey(selectedCategory)
        ? jobMap.JobCollection[selectedCategory]
        : new List<MonitorJob>();

    var format = selectedCategory == "Daily"
        ? "HH:mm" : "MM-dd HH:mm";




            
            #line default
            #line hidden
WriteLiteral("\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"");


            
            #line 29 "..\..\Dashboard\MonitorPage.cshtml"
                                        Write(Url.To(JobKitRoute.Monitor.CssUrl));

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n<script type=\"text/javascript\">\r\n    var launchUrl = \'");


            
            #line 31 "..\..\Dashboard\MonitorPage.cshtml"
                Write(Url.To(JobKitRoute.Monitor.LaunchUrl));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n    var recurringUrl = \'");


            
            #line 32 "..\..\Dashboard\MonitorPage.cshtml"
                   Write(Url.To(JobKitRoute.Monitor.LaunchRecurringUrl));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n    var jobLinkBaseUrl = \'");


            
            #line 33 "..\..\Dashboard\MonitorPage.cshtml"
                     Write(Url.JobDetails(""));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n    \r\n</script>\r\n<script type=\"text/javascript\" src=\"");


            
            #line 36 "..\..\Dashboard\MonitorPage.cshtml"
                               Write(Url.To(JobKitRoute.Monitor.JsUrl));

            
            #line default
            #line hidden
WriteLiteral("\"></script>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n        ");


            
            #line 40 "..\..\Dashboard\MonitorPage.cshtml"
   Write(SidebarControlFromMonitor.Render(Html, selectedCategory, jobMap));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n    <h1 class=\"page-header\">");


            
            #line 42 "..\..\Dashboard\MonitorPage.cshtml"
                        Write(Strings.Monitor_Title);

            
            #line default
            #line hidden
WriteLiteral(@"</h1>
    <div class=""col-md-9"">
        <div class=""table-responsive"">
            <table class=""table"">
                <thead>
                    <tr>
                        <th>名稱</th>
                        <th class=""min-width"">Cron</th>
                        <th>工作</th>
                        <th class=""align-right min-width"">監控時間</th>
                        <th class=""align-right min-width"">執行時間</th>
                        <th class=""align-right min-width"">執行狀態</th>
                        <th class=""min-width""></th>
                    </tr>
                </thead>
                <tbody>
");


            
            #line 58 "..\..\Dashboard\MonitorPage.cshtml"
                     foreach (var job in availableJobs.OrderBy(x => x.MonitorTime))
                    {
                        var jobStatus = job.GetStatus(Storage);


            
            #line default
            #line hidden
WriteLiteral("                        <tr class=\"js-jobs-list-row hover\">\r\n                    " +
"        <td class=\"word-break width-15\">");


            
            #line 63 "..\..\Dashboard\MonitorPage.cshtml"
                                                       Write(job.Name);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td class=\"word-break width-15\"><code>");


            
            #line 64 "..\..\Dashboard\MonitorPage.cshtml"
                                                             Write(job.Cron);

            
            #line default
            #line hidden
WriteLiteral("</code></td>\r\n                            <td class=\"align-right min-width\">");


            
            #line 65 "..\..\Dashboard\MonitorPage.cshtml"
                                                         Write(job.ActionName);

            
            #line default
            #line hidden
WriteLiteral(" </td>\r\n                            <td class=\"align-right min-width\">");


            
            #line 66 "..\..\Dashboard\MonitorPage.cshtml"
                                                         Write(job.MonitorTime.ToLocalTime().ToString(format));

            
            #line default
            #line hidden
WriteLiteral("  </td>\r\n                            <td class=\"align-right min-width\">");


            
            #line 67 "..\..\Dashboard\MonitorPage.cshtml"
                                                          Write(jobStatus.ExecutedTime.HasValue ? jobStatus.ExecutedTime.Value.ToLocalTime().ToString(format) : "-" );

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td class=\"align-right min-width\">\r\n          " +
"                      <label class=\"label label-default\">");


            
            #line 69 "..\..\Dashboard\MonitorPage.cshtml"
                                                               Write(jobStatus.Status.ToString());

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                            </td>\r\n                            <td clas" +
"s=\"min-width\">\r\n                                \r\n                            </" +
"td>\r\n                        </tr>\r\n");


            
            #line 75 "..\..\Dashboard\MonitorPage.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div" +
">\r\n");


        }
    }
}
#pragma warning restore 1591

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.JobKits.Dashboard
{
    using System;
    using System.Collections.Generic;
    
    #line 2 "..\..\Dashboard\MonitorPage.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 3 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.Dashboard.Pages;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Dashboard.Controls;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Resources;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Dashboard\MonitorPage.cshtml"
    using Hangfire.JobKits.Worker;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public partial class MonitorPage : Hangfire.Dashboard.RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");








WriteLiteral("\r\n");


            
            #line 10 "..\..\Dashboard\MonitorPage.cshtml"
  
    Layout = new LayoutPage(Strings.MonitorPage_Title);

    string selectedCategory = this.SelectedCategory;
    MonitorMap jobMap = this.Map;
    JobKitOptions options = this.Options;
    
    var availableJobs = jobMap.JobCollection.ContainsKey(selectedCategory)
        ? jobMap.JobCollection[selectedCategory]
        : new List<MonitorJob>();

    var format = selectedCategory == "Daily"
        ? "HH:mm" : "MM-dd HH:mm";




            
            #line default
            #line hidden
WriteLiteral("\r\n<script type=\"text/javascript\">\r\n    \r\n</script>\r\n\r\n<div class=\"row\">\r\n    <div" +
" class=\"col-md-3\">\r\n        ");


            
            #line 33 "..\..\Dashboard\MonitorPage.cshtml"
   Write(SidebarControlFromMonitor.Render(Html, selectedCategory, jobMap));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n    <h1 class=\"page-header\">");


            
            #line 35 "..\..\Dashboard\MonitorPage.cshtml"
                        Write(this.SelectedCategoryText);

            
            #line default
            #line hidden

            
            #line 35 "..\..\Dashboard\MonitorPage.cshtml"
                                                    Write(Strings.MonitorPage_Title);

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n    <div class=\"col-md-9\">\r\n        <div class=\"table-responsive\">\r\n      " +
"      <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n" +
"                        <th>");


            
            #line 41 "..\..\Dashboard\MonitorPage.cshtml"
                        Write(Strings.MonitorPage_Table_Name);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        <th class=\"min-width\">");


            
            #line 42 "..\..\Dashboard\MonitorPage.cshtml"
                                          Write(Strings.MonitorPage_Table_Cron);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        <th>");


            
            #line 43 "..\..\Dashboard\MonitorPage.cshtml"
                        Write(Strings.MonitorPage_Table_Action);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        <th class=\"align-right min-width\">");


            
            #line 44 "..\..\Dashboard\MonitorPage.cshtml"
                                                      Write(Strings.MonitorPage_Table_ScheduleTime);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        <th class=\"align-right min-width\">");


            
            #line 45 "..\..\Dashboard\MonitorPage.cshtml"
                                                      Write(Strings.MonitorPage_Table_ExecutedTime);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        <th class=\"align-right min-width\">");


            
            #line 46 "..\..\Dashboard\MonitorPage.cshtml"
                                                      Write(Strings.MonitorPage_Table_Status);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        \r\n                    </tr>\r\n                </the" +
"ad>\r\n                <tbody>\r\n");


            
            #line 51 "..\..\Dashboard\MonitorPage.cshtml"
                     foreach (var job in availableJobs.OrderBy(x => x.MonitorTime))
                    {
                        var jobStatus = job.GetStatus(Storage);


            
            #line default
            #line hidden
WriteLiteral("                        <tr class=\"js-jobs-list-row hover\">\r\n                    " +
"        <td class=\"word-break width-15\">");


            
            #line 56 "..\..\Dashboard\MonitorPage.cshtml"
                                                       Write(job.Name);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td class=\"word-break width-15\"><code>");


            
            #line 57 "..\..\Dashboard\MonitorPage.cshtml"
                                                             Write(job.Cron);

            
            #line default
            #line hidden
WriteLiteral("</code></td>\r\n                            <td class=\"align-right min-width\">");


            
            #line 58 "..\..\Dashboard\MonitorPage.cshtml"
                                                         Write(job.ActionName);

            
            #line default
            #line hidden
WriteLiteral(" </td>\r\n                            <td class=\"align-right min-width\">");


            
            #line 59 "..\..\Dashboard\MonitorPage.cshtml"
                                                         Write(job.MonitorTime.ToLocalTime().ToString(format));

            
            #line default
            #line hidden
WriteLiteral("  </td>\r\n                            <td class=\"align-right min-width\">");


            
            #line 60 "..\..\Dashboard\MonitorPage.cshtml"
                                                          Write(jobStatus.ExecutedTime.HasValue ? jobStatus.ExecutedTime.Value.ToLocalTime().ToString(format) : "-" );

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td class=\"align-right min-width\">\r\n");


            
            #line 62 "..\..\Dashboard\MonitorPage.cshtml"
                                 switch (jobStatus.Status)
                                {
                                    case MonitorJobStatus.Successed:

            
            #line default
            #line hidden
WriteLiteral("                                        <a href=\"");


            
            #line 65 "..\..\Dashboard\MonitorPage.cshtml"
                                             Write(Url.JobDetails(jobStatus.ExecutedJobId));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                                            <span class=\"badge\" style=\"backgr" +
"ound-color:#198754;\">");


            
            #line 66 "..\..\Dashboard\MonitorPage.cshtml"
                                                                                              Write(Strings.MonitorStatus_Successed);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                                        </a>\r\n");


            
            #line 68 "..\..\Dashboard\MonitorPage.cshtml"
                                        break;
                                    case MonitorJobStatus.Failed:

            
            #line default
            #line hidden
WriteLiteral("                                        <a href=\"");


            
            #line 70 "..\..\Dashboard\MonitorPage.cshtml"
                                             Write(Url.JobDetails(jobStatus.ExecutedJobId));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                                            <span class=\"badge\" style=\"backgr" +
"ound-color:#dc3545;\">");


            
            #line 71 "..\..\Dashboard\MonitorPage.cshtml"
                                                                                              Write(Strings.MonitorStatus_Failed);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                                        </a>\r\n");


            
            #line 73 "..\..\Dashboard\MonitorPage.cshtml"
                                        break;
                                    case MonitorJobStatus.Invalid:

            
            #line default
            #line hidden
WriteLiteral("                                        <a href=\"");


            
            #line 75 "..\..\Dashboard\MonitorPage.cshtml"
                                             Write(Url.JobDetails(jobStatus.ExecutedJobId));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                                            <span class=\"badge\" style=\"backgr" +
"ound-color:#ffc107;color:#000000\">");


            
            #line 76 "..\..\Dashboard\MonitorPage.cshtml"
                                                                                                           Write(Strings.MonitorStatus_Invalid);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                                        </a>\r\n");


            
            #line 78 "..\..\Dashboard\MonitorPage.cshtml"
                                        break;
                                    case MonitorJobStatus.Unexecuted:

            
            #line default
            #line hidden
WriteLiteral("                                        <span class=\"badge\">");


            
            #line 80 "..\..\Dashboard\MonitorPage.cshtml"
                                                        Write(Strings.MonitorStatus_Unexecuted);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");


            
            #line 81 "..\..\Dashboard\MonitorPage.cshtml"
                                        break;
                                    default:
                                        
            
            #line default
            #line hidden
            
            #line 83 "..\..\Dashboard\MonitorPage.cshtml"
                                    Write("-");

            
            #line default
            #line hidden
            
            #line 83 "..\..\Dashboard\MonitorPage.cshtml"
                                              
                                        break;
                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n");


            
            #line 89 "..\..\Dashboard\MonitorPage.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div" +
">\r\n");


        }
    }
}
#pragma warning restore 1591
